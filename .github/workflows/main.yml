name: Deploy FastAPI App via Self-Hosted Runner

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted  # Self-hosted GitHub runner

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: |
          echo "Building latest Docker image..."
          docker build -t django-notes-app-image .
        
      - name: Stop & Remove Existing Container
        run: |
          CONTAINER_ID=$(docker ps -aq --filter 'name=django-notes-app-container')
          if [ ! -z "$CONTAINER_ID" ]; then
            docker stop django-notes-app-container
            docker rm django-notes-app-container
          fi

      - name: Run New Container from Latest Image
        run: |
          echo "Running container from latest image..."
          docker run -d --name django-notes-app-container -p 8000:8000 django-notes-app-image

      - name: Cleanup Unused Docker Images
        run: |
          echo "Cleaning up old Docker images..."
          docker image prune -af

  sonarQube:
    runs-on: self-hosted
    needs: deploy
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: SonarQube Scan
        run: |
          echo "Running SonarQube analysis..."
          docker run --rm --network host \
            -e SONAR_HOST_URL="http://localhost:9000" \
            -e SONAR_LOGIN=$SONAR_TOKEN \
            -v $(pwd):/usr/src \
            sonarsource/sonar-scanner-cli
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Correctly pass the token as an environment variable

      - name: Generate PDF Report
        run: |
          echo "Generating PDF report..."
          curl -u $SONAR_LOGIN:$SONAR_TOKEN \
            "http://localhost:9000/api/qualitygates/project_status?projectKey=free" \
            -o report.json
          
          # Convert JSON to PDF (use a tool or custom script)
          python3 generate_pdf_report.py report.json

  nginx:
    runs-on: self-hosted
    needs: deploy
    
    steps:
      - name: Test and Reload Nginx
        run: |
          echo "Testing nginx configuration..."
          nginx -t && sudo systemctl restart nginx
