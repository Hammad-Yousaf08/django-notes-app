name: Deploy FastAPI App via Self-Hosted Runner

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted  # Self-hosted GitHub runn

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Docker
        run: |
          echo "Installing Docker..."
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo usermod -aG docker docker  # Add 'strapi' user to Docker group
          newgrp docker  # Update the group immediately

      - name: Build Docker Image
        run: |
          echo "Building latest Docker image..."
          su - strapi -c "docker build -t django-notes-app-image ."
        
      - name: Stop & Remove Existing Container
        run: |
          CONTAINER_ID=$(su - strapi -c "docker ps -aq --filter 'name=django-notes-app-container'")
          if [ ! -z "$CONTAINER_ID" ]; then
            su - strapi -c "docker stop django-notes-app-container"
            su - strapi -c "docker rm django-notes-app-container"
          fi

      - name: Run New Container from Latest Image
        run: |
          echo "Running container from latest image..."
          su - strapi -c "docker run -d --name django-notes-app-container -p 8000:8000 django-notes-app-image"

      - name: Cleanup Unused Docker Images
        run: |
          echo "Cleaning up old Docker images..."
          su - strapi -c "docker image prune -af"

  sonarQube:
    runs-on: self-hosted
    needs: deploy
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: SonarQube Scan
        run: |
          echo "Running SonarQube analysis..."
          su - strapi -c "docker run --rm \
            -e SONAR_HOST_URL='http://localhost:9000' \
            -e SONAR_LOGIN=$SONAR_TOKEN \
            -v $(pwd):/usr/src \
            sonarsource/sonar-scanner-cli"

      - name: Generate PDF Report
        run: |
          echo "Generating PDF report..."
          curl -u $SONAR_LOGIN:$SONAR_TOKEN \
          "http://localhost:9000/api/qualitygates/project_status?projectKey=free" \
          -o report.json
          
          # Convert JSON to PDF (use a tool or custom script)
          python3 generate_pdf_report.py report.json

  nginx:
    runs-on: self-hosted
    needs: deploy
    
    steps:
      - name: Test and Reload Nginx
        run: |
          echo "Testing nginx configuration..."
          su - strapi -c "nginx -t && sudo systemctl restart nginx"
